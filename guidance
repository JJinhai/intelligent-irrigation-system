#include <stdio.h>
#include <stdlib.h>


int main(void)
{
    //// Define the artificial potential field parameters
    // Points of attraction
    int xa = 70;
    int ya = 50;

    // Location of obstacles
    int nobs = 5;
    int xo[nobs] = { 20 30 35 50 65 };
    int yo[nobs] = { 13 25 35 38 45 };
    
    // Size of obstacles (rho_0)
    int rho_0[nobs] = {7 3 6 4 4};

    // Constants.
    int Ka = 1; 
    int Kv = 50; 
    int Kr[nobs] = {500 250 400 300 300};
    mass = 5;

    //// Integration step.
    // initial conditions
    float x0 = 5; 
    float y0 = 5;

    // Initialise simulation parameters
    float x = x0;
    float y = y0;
    float vx = 0;
    float vy = 0;
    terminate = false;
    float t = 0;
    float dt = 0.01;

    // Store variables for later assessment
    float traj = [];
    float Fac = []; 
    float Frc = []; 
    float Fdc = [];
    float Fc = [];
    while(!terminate)
    {
        //// Check if reached destination
        rho = sqrt(pow((xa-x),2)+pow((ya-y),2));

        if(rho < 0.1)
        {
            terminate = true;
        }
            
        
        //// Calculate the conservative forces
        // Attractive force (Fa)
        Fa = zeros(2,1);

        Fa(1,1)=-Ka*(x-xa);
        Fa(2,1)=-Ka*(y-ya);

        Fac = [Fac Fa];
        // Repulsive force (Fr)
        Fr = zeros(2,1);

        for（i=0;i<5;i++）
        {
            rho_r=sqrt(pow((xo(i)-x),2)+pow((yo(i)-y),2));

            if rho_r < rho_0(idx)
            {
                Fr(1,1)=Fr(1,1)-Kr(1,i)*(rho_r-rho_0(1,i))*(x-xo(1,i))/rho_r;
                Fr(2,1)=Fr(2,1)-Kr(1,i)*(rho_r-rho_0(1,i))*(y-yo(1,i))/rho_r;
            }
                
        }
           
            
    

        Frc = [Frc Fr];
        // Damping force (Fd)
        Fd = zeros(2,1);

        Fd(1,1)=-Kv*vx
        Fd(2,1)=-Kv*vy

        Fdc = [Fdc Fd];
        // Total force (F)

        F(1,1)=Fa(1,1)+Fr(1,1)+Fd(1,1);
        F(2,1)=Fa(2,1)+Fr(2,1)+Fd(2,1);

        Fc = [Fc F];
        // Velocity and Position (vx, vy, x, y) through integrating the equations

        vx=vx+dt*F(1,1)/mass;
        vy=vy+dt*F(2,1)/mass;
        x=x+vx*dt;
        y=y+vy*dt;
        t=t+dt;

        traj = [traj [x;y]]; 

    }
        

    return 0;

}
