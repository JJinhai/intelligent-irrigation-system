#include<serial.h>  */或者 #include<serial/serial.h>
/* 土壤湿度传感器模块测试

   监测 ADC 输入 A0 上的土壤湿度模拟输出“A0”
   监测数字输入引脚 8 上的土壤湿度数字输出“D0”
   只有在进行测量
   以降低腐蚀率时才关闭数字输出引脚 9 的模块传感器探头。
*/ 
// 定义下面使用的引脚
#define ADC_PIN A0     // 使用任何可用的 ADC 引脚，连接到 A0 传感器引脚
#define DIGITAL_PIN 8  // 使用任何可用的数字引脚，连接到 D0 传感器引脚
#define PWR_PIN 9      // 使用任何可用的数字引脚，连接到 VCC 传感器引脚
#define SOIL_WET 500   // 定义我们认为土壤“湿”的最大值
#define SOIL_DRY 750   // 定义我们认为土壤“干”的最大值

//===============================================================================
//  初始化
//===============================================================================
void setup()
{
  Serial.begin(9600);          // 设置串行监视器窗口通信速度

  pinMode(PWR_PIN, OUTPUT);    // 将用于为传感器供电的引脚设置为输出
  digitalWrite(PWR_PIN, LOW);  // 设置为 LOW 以在开始时关闭传感器
}
//===============================================================================
//  重点
//===============================================================================
void loop()
{
  int returnedADCData = readSoilADC();        // 读取传感器模拟输出
  Serial.println(returnedADCData);            // print原始 ADC 数据
  Serial.print("tDigital Output = ");      
  Serial.print(readSoilDigital());           // 读取传感器数字输出并直接print

 if (returnedADCData < SOIL_WET) {           // 确定我们的土壤湿度情况
  Serial.println("tConclusion:  Soil is too wet");
 }
 else if (returnedADCData >= SOIL_WET && returnedADCData < SOIL_DRY) {
  Serial.println("tConclusion:  Soil moisture is perfect");
 }
else {
  Serial.println("tConclusion: Soil is too dry - time to water!");
}
  delay(1000);      // 每秒读取一次读数以进行测试。
                    // 通常我们可能每 12 小时读取一次
}

//===============================================================================
//  函数readSoilADC返回模拟土壤水分测量
//===============================================================================
int readSoilADC()
{
  digitalWrite(PWR_PIN, HIGH);       //延迟开启传感器电源
  delay(25);                         // 允许电源稳定
  int val_ADC = analogRead(ADC_PIN); // 从传感器读取模拟值
  digitalWrite(PWR_PIN, LOW);        // 关闭传感器电源
  return val_ADC;                    // 返回模拟水分值
}
//===============================================================================
//  函数 readSoilDigital 返回数字土壤水分值
//===============================================================================
int readSoilDigital()
{
  digitalWrite(PWR_PIN, HIGH);            //延迟开启传感器电源
  delay(25);                              /// 允许电源稳定
  int val_Digital = digitalRead(DIGITAL_PIN); //从传感器读取数字值
  digitalWrite(PWR_PIN, LOW);             /// 关闭传感器电源
  return val_Digital;                     // 返回数字水分值
}